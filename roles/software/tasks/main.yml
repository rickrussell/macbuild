---
# Homebrew Unix Software
- name: update homebrew to the latest version
  homebrew: update_homebrew=yes

- name: brew taps
  homebrew_tap: tap={{ item }} state=present
  with_items: "{{ brew_taps }}"

- name: brew packages
  homebrew: name={{ item }} state=latest
  with_items: "{{ brew_packages }}"

# Homebrew Cask Desktop Applications
- name: brew cask tap
  homebrew_tap: tap=caskroom/cask state=present

- name: brew cask package manager
  homebrew: name=brew-cask state=latest

- name: create the caskroom directory
  file: path=/opt/homebrew-cask/Caskroom state=directory owner=fots group=staff mode=0775
  become: yes
  become_method: sudo

- name: desktop cask applications
  homebrew_cask: name={{ item }} state=present
  with_items: "{{ brew_casks }}"

# App Store Applications
- name: check that appstore applications exist
  stat: path="/Applications/{{ item }}.app/Contents/_MASReceipt/receipt"
  with_items: "{{ appstore_apps }}"
  register: appstore_app_files

# Note that we're using with_indexed_items below to avoid lengthy stat output
# for each item during the playbook run
- name: desktop appstore applications
  fail: msg="Please install {{ appstore_app_files.results[item.0].item }} from the App Store"
  ignore_errors: yes
  when: not appstore_app_files.results[item.0].stat.exists
  with_indexed_items: "{{ appstore_apps }}"

# Fonts
# Install all fonts manually since using Homebrew cask for this purpose is
# not possible when your home directory resides on another volume
- name: check if the font is installed
  stat: path="~/Library/Fonts/{{ item.creates }}"
  register: font_check
  with_items: "{{ fonts }}"

- name: download the font
  get_url: url="{{ item.1.url }}"
  args:
    dest: /var/tmp
    mode: 0644
  when: not font_check.results[item.0].stat.exists
  with_indexed_items: "{{ fonts }}"

- name: extract the font
  command: unzip -o -j "/var/tmp/{{ item.1.archive }}" "{{ item.1.wildcard }}"
  args:
    chdir: ~/Library/Fonts
    creates: "~/Library/Fonts/{{ item.1.creates }}"
  when: not font_check.results[item.0].stat.exists
  with_indexed_items: "{{ fonts }}"
